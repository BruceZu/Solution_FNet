package main.com.fNet.solutions.solution1;

public class LinkedList {

	private Node head;
	private int size;
	
	public LinkedList(){
		head =null;
		size = 0;
	}
	
	public void addNode(int value){
		Node newNode = new Node(value);
		if (head==null){
			head= newNode;
		}
		else{
			Node current = head;
			while(current.getNext() != null){
				current = current.getNext();
			}
			current.setNext(newNode);
		}
		size++;
	}
	
	public Node reverse(Node head){
		if(head == null || head.getNext() == null)
			return head;
		else{
			Node previousCurrent = null;
			Node temp = null;
			Node current = head;
			
			while(current.getNext() != null){			
				temp = current.getNext();
				current.setNext(previousCurrent); // Point current node to previous node
				previousCurrent = current; // Point previous current to current node
				current = temp;					
			}
			current.setNext(previousCurrent); 
			head = current;
			this.head = head;
			return this.head;
		}
	}

	public int getSize() {
		return size;
	}

}
