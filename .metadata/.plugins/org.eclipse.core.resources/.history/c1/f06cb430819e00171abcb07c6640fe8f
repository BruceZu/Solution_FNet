package main.com.fNet.solutions.solution4;

/*
 * Problem 4: Implementation of Singleton class
 * Solution:
 * The Singleton pattern is a design pattern which specifies that a class can be 
 * instantiated only once and access to that one single instance is provided. 
 * 
 * We can implement it in 2 ways:
 * 1. Lazy Initialization
 * 2. Eager Initialization
 * 
 * The following are the 2 implementations for SingleTon
 * */
public class SingletonImplementation {
	private static SingletonImplementation singletonInstance =null;
	
	private SingletonImplementation(){
		
	}
	
	public static SingletonImplementation getSingletonInstance(){
		if (singletonInstance == null)
			singletonInstance = new SingletonImplementation();
		return singletonInstance;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
